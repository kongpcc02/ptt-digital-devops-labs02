name: Lab02-Workflows
on:
  workflow_dispatch:
  push:
    branches:
        - "main"
jobs:
  unittest:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3 #Use checkout action to download the source code to run unittest
          name: Checkout
        - uses: actions/setup-go@v3 #Setup golang environment for runnint unittest
          name: Setup Go environment
          with:
            go-version-file: ./src/go.mod
        - name: Prepare Unit Test
          working-directory: ./src
          run: go mod download
        - name: Run Unit Test
          working-directory: ./src
          run: go test ./... -coverprofile="coverage.out" -v
        - name: list file
          working-directory: ./src
          run: ls -l
  code-coverage:
      name: Code Coverage
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3 #Use checkout action to download the source code to run unittest
            name: Checkout
          - uses: actions/setup-go@v3 #Setup golang environment for runnint unittest
            name: Setup Go environment
            with:
              go-version-file: ./src/go.mod
          - name: Run Code Coverage checking
            working-directory: ./src
            run: go test -coverprofile coverage.out ./...
          - name: Reformat coverage report txt
            working-directory: ./src
            run: go tool cover -func coverage.out -o coverage-report.txt
          - name: Reformat coverage report html
            working-directory: ./src
            run: go tool cover -html coverage.out -o coverage-report.html 
          - name: Print out report
            working-directory: ./src
            run: cat coverage-report.txt
          - name: Upload coverage report to artifact
            uses: actions/upload-artifact@v3
            with:
              name: code-coverage-report
              path: src/coverage-report*
  code-vuln-scan:
      name: Code Vulnerability Scan
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3 #Use checkout action to download the source code to run unittest
            name: Checkout
          - uses: aquasecurity/trivy-action@master
            name: Vulnerability Scan
            with:
              scan-type: 'fs'
              ignore-unfixed: true
              format: 'sarif'
              output: 'trivy-results.sarif'
              severity: 'CRITICAL'
          - uses: actions/upload-artifact@v3
            name: Save Code vulnerability scan report
            with:
              name: code-vuln-report
              path: trivy-results.sarif
  quality-gate:
      runs-on: ubuntu-latest
      needs: ["code-coverage", "unittest", "code-vuln-scan"]
      steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: code-coverage-report
          path: ./src
      - run: python coverage.py 1
        working-directory: ./src
        name: Simple Quality Gate